apiVersion: core.observatorium.io/v1alpha1
kind: Observatorium
metadata:
  labels:
    app.kubernetes.io/instance: observatorium-xyz
    app.kubernetes.io/name: observatorium-cr
    app.kubernetes.io/part-of: observatorium
  name: observatorium-xyz
spec:
  api:
    image: quay.io/observatorium/observatorium:master-2020-11-02-v0.1.1-192-ge324057
    rbac:
      roleBindings:
      - name: test
        roles:
        - read-write
        subjects:
        - kind: user
          name: admin@example.com
      roles:
      - name: read-write
        permissions:
        - read
        - write
        resources:
        - logs
        - metrics
        tenants:
        - test
    replicas: 1
    tenants:
    - id: 1610b0c3-c509-4592-a256-a1871353dbfa
      name: test
      oidc:
        caKey: service-ca.crt
        clientID: test
        clientSecret: ZXhhbXBsZS1hcHAtc2VjcmV0
        configMapName: test-ca-tls
        issuerCAPath: /var/run/tls/test/service-ca.crt
        issuerURL: https://dex.dex.svc.cluster.local:5556/dex
        usernameClaim: email
    tls:
      caKey: ca.pem
      certKey: cert.pem
      configMapName: observatorium-xyz-tls
      keyKey: key.pem
      secretName: observatorium-xyz-tls
    version: master-2020-11-02-v0.1.1-192-ge324057
  hashrings:
  - hashring: default
    tenants: []
  objectStorageConfig:
    thanos:
      key: thanos.yaml
      name: thanos-objectstorage
  securityContext: {}
  thanos:
    compact:
      enableDownsampling: false
      replicas: 1
      retentionResolution1h: 1s
      retentionResolution5m: 1s
      retentionResolutionRaw: 14d
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
    image: quay.io/thanos/thanos:v0.29.0
    query:
      replicas: 1
    queryFrontend:
      cache:
        exporterImage: prom/memcached-exporter:v0.6.0
        exporterVersion: v0.6.0
        image: docker.io/memcached:1.6.3-alpine
        memoryLimitMb: 1024
        replicas: 1
        version: 1.6.3-alpine
      replicas: 1
    receivers:
      replicas: 1
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
    rule:
      replicas: 1
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
    store:
      cache:
        exporterImage: prom/memcached-exporter:v0.6.0
        exporterVersion: v0.6.0
        image: docker.io/memcached:1.6.3-alpine
        memoryLimitMb: 1024
        replicas: 1
        version: 1.6.3-alpine
      shards: 1
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
    version: v0.29.0
