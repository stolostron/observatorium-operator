
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: observatoria.core.observatorium.io
spec:
  group: core.observatorium.io
  names:
    kind: Observatorium
    listKind: ObservatoriumList
    plural: observatoria
    singular: observatorium
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Observatorium is the Schema for the observatoria API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ObservatoriumSpec defines the desired state of Observatorium
            properties:
              affinity:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                description: Affinity causes all components to be scheduled on nodes
                  with matching rules.
              api:
                description: API
                properties:
                  additionalWriteEndpoints:
                    description: AdditionalWriteEndpoints is a slice of additional
                      write endpoint for the Observatorium API.
                    properties:
                      endpointsConfigSecret:
                        description: Secret name for the endpoints configuration
                        type: string
                      mountPath:
                        description: Mount path for the secrets
                        type: string
                      mountSecrets:
                        description: Secret list to be mounted
                        items:
                          type: string
                        type: array
                    required:
                    - endpointsConfigSecret
                    type: object
                  image:
                    description: API image
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                    description: API image pull policy
                  rbac:
                    description: RBAC is an RBAC configuration for the Observatorium
                      API.
                    properties:
                      roleBindings:
                        description: RoleBindings is a slice of Observatorium API
                          role bindings.
                        items:
                          description: RBACRoleBinding binds a set of roles to a set
                            of subjects.
                          properties:
                            name:
                              description: Name is the name of the role binding.
                              type: string
                            roles:
                              description: Roles is a list of roles that will be bound.
                              items:
                                type: string
                              type: array
                            subjects:
                              description: Subjects is a list of subjects who will
                                be given access to the specified roles.
                              items:
                                description: Subject represents a subject to which
                                  an RBAC role can be bound.
                                properties:
                                  kind:
                                    description: SubjectKind is a kind of Observatorium
                                      subject.
                                    type: string
                                  name:
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          - roles
                          - subjects
                          type: object
                        type: array
                      roles:
                        description: Roles is a slice of Observatorium API roles.
                        items:
                          description: RBACRole describes a set of permissions to
                            interact with a tenant.
                          properties:
                            name:
                              description: Name is the name of the role.
                              type: string
                            permissions:
                              description: Permissions is a list of permissions that
                                will be granted.
                              items:
                                description: Permission is an Observatorium RBAC permission.
                                type: string
                              type: array
                            resources:
                              description: Resources is a list of resources to which
                                access will be granted.
                              items:
                                type: string
                              type: array
                            tenants:
                              description: Tenants is a list of tenants whose resources
                                will be considered.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - permissions
                          - resources
                          - tenants
                          type: object
                        type: array
                    required:
                    - roleBindings
                    - roles
                    type: object
                  replicas:
                    description: Number of API replicas.
                    format: int32
                    type: integer
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                    description: Compute Resources required by this container.
                  serviceMonitor:
                    description: ServiceMonitor enables servicemonitor.
                    type: boolean
                  tenants:
                    description: Tenants is a slice of tenants for the Observatorium
                      API.
                    items:
                      description: APITenant represents a tenant in the Observatorium
                        API.
                      properties:
                        id:
                          type: string
                        mTLS:
                          description: TenantMTLS represents the mTLS configuration
                            for an Observatorium API tenant.
                          properties:
                            caKey:
                              type: string
                            configMapName:
                              type: string
                            secretName:
                              type: string
                          required:
                          - caKey
                          type: object
                        name:
                          type: string
                        oidc:
                          description: TenantOIDC represents the OIDC configuration
                            for an Observatorium API tenant.
                          properties:
                            caKey:
                              type: string
                            clientID:
                              type: string
                            clientSecret:
                              type: string
                            configMapName:
                              type: string
                            issuerCAPath:
                              type: string
                            issuerURL:
                              type: string
                            redirectURL:
                              type: string
                            usernameClaim:
                              type: string
                          required:
                          - clientID
                          - issuerURL
                          type: object
                      required:
                      - id
                      - name
                      type: object
                    type: array
                  tls:
                    description: TLS configuration for the Observatorium API.
                    properties:
                      caKey:
                        type: string
                      certKey:
                        type: string
                      configMapName:
                        type: string
                      keyKey:
                        type: string
                      reloadInterval:
                        type: string
                      secretName:
                        type: string
                      serverName:
                        type: string
                    required:
                    - certKey
                    - keyKey
                    - secretName
                    type: object
                  version:
                    description: Version describes the version of API to use.
                    type: string
                required:
                - rbac
                - tenants
                type: object
              envVars:
                additionalProperties:
                  type: string
                description: EnvVars define the common environment variables. EnvVars
                  apply to thanos compact/receive/rule/store components
                type: object
              hashrings:
                description: Hashrings describes a list of Hashrings
                items:
                  properties:
                    hashring:
                      description: Thanos Hashring name
                      type: string
                    tenants:
                      description: Tenants describes a lists of tenants.
                      items:
                        type: string
                      type: array
                  required:
                  - hashring
                  type: object
                type: array
              loki:
                description: Loki
                properties:
                  image:
                    description: Loki image
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                    description: Loki image pull policy
                  replicas:
                    additionalProperties:
                      format: int32
                      type: integer
                    description: Loki replicas per component
                    type: object
                  version:
                    description: Version of Loki image to be deployed
                    type: string
                  volumeClaimTemplate:
                    description: VolumeClaimTemplate
                    properties:
                      spec:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                    required:
                    - spec
                    type: object
                required:
                - image
                - volumeClaimTemplate
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector causes all components to be scheduled on
                  nodes with matching labels.
                type: object
              objectStorageConfig:
                description: Objest Storage Configuration
                properties:
                  loki:
                    description: Object Store Config Secret for Loki
                    properties:
                      accessKeyIdKey:
                        description: Object Store Config key for AWS_ACCESS_KEY_ID
                        type: string
                      bucketsKey:
                        description: Object Store Config key for S3_BUCKETS
                        type: string
                      endpointKey:
                        description: Object Store Config key for S3_URL
                        type: string
                      regionKey:
                        description: Object Store Config key for S3_REGION
                        type: string
                      secretAccessKeyKey:
                        description: Object Store Config key for AWS_SECRET_ACCESS_KEY
                        type: string
                      secretName:
                        description: Object Store Config Secret Name
                        type: string
                    required:
                    - secretName
                    type: object
                  thanos:
                    description: Object Store Config Secret for Thanos
                    properties:
                      key:
                        description: Object Store Config key
                        type: string
                      name:
                        description: Object Store Config Secret Name
                        type: string
                      serviceAccountProjection:
                        description: When set to true, mounts service account token
                          in thanos store, ruler, compact and receiver pods. Default
                          is false.
                        type: boolean
                      tlsSecretMountPath:
                        description: TLS secret mount path in thanos store/ruler/compact/receiver
                        type: string
                      tlsSecretName:
                        description: TLS secret contains the custom certificate for
                          the object store
                        type: string
                    required:
                    - key
                    - name
                    type: object
                required:
                - thanos
                type: object
              pullSecret:
                description: Pull secret used to pull the images.
                type: string
              securityContext:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecurityContext'
                description: Security options the pod should run with.
              thanos:
                description: Thanos Spec
                properties:
                  compact:
                    description: Thanos CompactSpec
                    properties:
                      containers:
                        description: The container object, provides a way to override
                          parameters of existing containers. Currently only the `args`
                          value are overwritten.
                        items:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0Container'
                        type: array
                      deleteDelay:
                        description: Time before a block marked for deletion is deleted
                          from bucket
                        type: string
                      enableDownsampling:
                        description: EnableDownsampling enables downsampling.
                        type: boolean
                      replicas:
                        description: Number of Compact replicas.
                        format: int32
                        type: integer
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      retentionResolution1h:
                        description: RetentionResolutionRaw
                        type: string
                      retentionResolution5m:
                        description: RetentionResolutionRaw
                        type: string
                      retentionResolutionRaw:
                        description: RetentionResolutionRaw
                        type: string
                      serviceAccountAnnotations:
                        additionalProperties:
                          type: string
                        description: Annotations is an unstructured key value map
                          stored with a service account
                        type: object
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                      volumeClaimTemplate:
                        description: VolumeClaimTemplate
                        properties:
                          spec:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                        required:
                        - spec
                        type: object
                    required:
                    - retentionResolution1h
                    - retentionResolution5m
                    - retentionResolutionRaw
                    - volumeClaimTemplate
                    type: object
                  image:
                    description: Thanos image
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                    description: Thanos image pull policy
                  query:
                    description: Query
                    properties:
                      containers:
                        description: The container object, provides a way to override
                          parameters of existing containers. Currently only the `args`
                          value are overwritten.
                        items:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0Container'
                        type: array
                      lookbackDelta:
                        description: The maximum lookback duration for retrieving
                          metrics during expression evaluations.
                        type: string
                      replicas:
                        description: Number of Query replicas.
                        format: int32
                        type: integer
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      serviceAccountAnnotations:
                        additionalProperties:
                          type: string
                        description: Annotations is an unstructured key value map
                          stored with a service account
                        type: object
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                      usePrometheusEngine:
                        description: Default to old Prometheus engine instead of Thanos
                          PromQL engine.
                        type: boolean
                    type: object
                  queryFrontend:
                    description: Thanos QueryFrontend
                    properties:
                      cache:
                        description: Memcached spec for QueryFrontend
                        properties:
                          connectionLimit:
                            description: Max simultaneous connections
                            format: int32
                            type: integer
                          exporterImage:
                            description: Memcached Prometheus Exporter image
                            type: string
                          exporterImagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            description: Memcached Prometheus Exporter image image
                              pull policy
                          exporterResources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                            description: Compute Resources required by this container.
                          exporterVersion:
                            description: Version of Memcached Prometheus Exporter
                              image to be deployed.
                            type: string
                          image:
                            description: Memcached image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            description: Memcached image pull policy
                          maxItemSize:
                            description: 'Max item size (default: 1m, min: 1k, max:
                              1024m)'
                            type: string
                          memoryLimitMb:
                            description: Memory limit of Memcached in megabytes.
                            format: int32
                            type: integer
                          replicas:
                            description: Number of Memcached replicas.
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                            description: Compute Resources required by this container.
                          serviceMonitor:
                            description: ServiceMonitor enables servicemonitor.
                            type: boolean
                          version:
                            description: Version of Memcached image to be deployed.
                            type: string
                        type: object
                      containers:
                        description: The container object, provides a way to override
                          parameters of existing containers. Currently only the `args`
                          value are overwritten.
                        items:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0Container'
                        type: array
                      replicas:
                        description: Number of Query Frontend replicas.
                        format: int32
                        type: integer
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                    type: object
                  receiveController:
                    description: Thanos Receive Controller Spec
                    properties:
                      image:
                        description: Receive Controller image
                        type: string
                      imagePullPolicy:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                        description: Receive image pull policy
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                      version:
                        description: Version describes the version of Thanos receive
                          controller to use.
                        type: string
                    type: object
                  receivers:
                    description: Thanos ThanosPersistentSpec
                    properties:
                      containers:
                        description: The container object, provides a way to override
                          parameters of existing containers. Currently only the `args`
                          value are overwritten.
                        items:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0Container'
                        type: array
                      replicas:
                        description: Number of Receiver replicas.
                        format: int32
                        type: integer
                      replicationFactor:
                        description: ReplicationFactor defines the number of copies
                          of every time-series
                        format: int32
                        type: integer
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      retention:
                        description: How long to retain raw samples on local storage
                        type: string
                      serviceAccountAnnotations:
                        additionalProperties:
                          type: string
                        description: Annotations is an unstructured key value map
                          stored with a service account
                        type: object
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                      volumeClaimTemplate:
                        description: VolumeClaimTemplate
                        properties:
                          spec:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                        required:
                        - spec
                        type: object
                    required:
                    - volumeClaimTemplate
                    type: object
                  rule:
                    description: Thanos RulerSpec
                    properties:
                      alertmanagerConfigFile:
                        description: AlertmanagerConfigFile
                        properties:
                          key:
                            description: Alertmanager ConfigMap key
                            type: string
                          name:
                            description: Alertmanager ConfigMap Name
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      alertmanagerURLs:
                        description: AlertmanagerURLs
                        items:
                          type: string
                        type: array
                      blockDuration:
                        description: Block duration for TSDB block
                        type: string
                      containers:
                        description: The container object, provides a way to override
                          parameters of existing containers. Currently only the `args`
                          value are overwritten.
                        items:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0Container'
                        type: array
                      evalInterval:
                        description: Evaluation interval
                        type: string
                      extraVolumeMounts:
                        description: ExtraVolumeMounts
                        items:
                          properties:
                            key:
                              description: File name for the mount
                              type: string
                            mountPath:
                              description: Volume mount path in the pod
                              type: string
                            name:
                              description: Resource name for the volume mount source
                              type: string
                            type:
                              description: Voume mount type, configMap or secret
                              type: string
                          required:
                          - key
                          - mountPath
                          - name
                          - type
                          type: object
                        type: array
                      reloaderImage:
                        description: ReloaderImage is an image of configmap reloader
                        type: string
                      reloaderImagePullPolicy:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                        description: ReloaderImage image pull policy
                      reloaderResources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      replicas:
                        description: Number of Rule replicas.
                        format: int32
                        type: integer
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      retention:
                        description: Block retention time on local disk
                        type: string
                      rulesConfig:
                        description: RulesConfig configures rules from the configmaps
                        items:
                          properties:
                            key:
                              description: Rule ConfigMap key
                              type: string
                            name:
                              description: Rule ConfigMap Name
                              type: string
                          required:
                          - key
                          - name
                          type: object
                        type: array
                      serviceAccountAnnotations:
                        additionalProperties:
                          type: string
                        description: Annotations is an unstructured key value map
                          stored with a service account
                        type: object
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                      volumeClaimTemplate:
                        description: VolumeClaimTemplate
                        properties:
                          spec:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                        required:
                        - spec
                        type: object
                    required:
                    - volumeClaimTemplate
                    type: object
                  store:
                    description: Thanos StoreSpec
                    properties:
                      cache:
                        description: Memcached spec for Store
                        properties:
                          connectionLimit:
                            description: Max simultaneous connections
                            format: int32
                            type: integer
                          exporterImage:
                            description: Memcached Prometheus Exporter image
                            type: string
                          exporterImagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            description: Memcached Prometheus Exporter image image
                              pull policy
                          exporterResources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                            description: Compute Resources required by this container.
                          exporterVersion:
                            description: Version of Memcached Prometheus Exporter
                              image to be deployed.
                            type: string
                          image:
                            description: Memcached image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            description: Memcached image pull policy
                          maxItemSize:
                            description: 'Max item size (default: 1m, min: 1k, max:
                              1024m)'
                            type: string
                          memoryLimitMb:
                            description: Memory limit of Memcached in megabytes.
                            format: int32
                            type: integer
                          replicas:
                            description: Number of Memcached replicas.
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                            description: Compute Resources required by this container.
                          serviceMonitor:
                            description: ServiceMonitor enables servicemonitor.
                            type: boolean
                          version:
                            description: Version of Memcached image to be deployed.
                            type: string
                        type: object
                      containers:
                        description: The container object, provides a way to override
                          parameters of existing containers. Currently only the `args`
                          value are overwritten.
                        items:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0Container'
                        type: array
                      resources:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        description: Compute Resources required by this container.
                      serviceAccountAnnotations:
                        additionalProperties:
                          type: string
                        description: Annotations is an unstructured key value map
                          stored with a service account
                        type: object
                      serviceMonitor:
                        description: ServiceMonitor enables servicemonitor.
                        type: boolean
                      shards:
                        format: int32
                        type: integer
                      volumeClaimTemplate:
                        description: VolumeClaimTemplate
                        properties:
                          spec:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                        required:
                        - spec
                        type: object
                    required:
                    - volumeClaimTemplate
                    type: object
                  version:
                    description: Version of Thanos image to be deployed.
                    type: string
                required:
                - compact
                - receivers
                - rule
                - store
                type: object
              tolerations:
                description: Tolerations causes all components to tolerate specified
                  taints.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                type: array
            required:
            - hashrings
            - objectStorageConfig
            type: object
          status:
            description: ObservatoriumStatus defines the observed state of Observatorium
            properties:
              conditions:
                description: Represents the status of Observatorium
                items:
                  properties:
                    currentStatus:
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    name:
                      type: string
                  required:
                  - currentStatus
                  - lastTransitionTime
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
